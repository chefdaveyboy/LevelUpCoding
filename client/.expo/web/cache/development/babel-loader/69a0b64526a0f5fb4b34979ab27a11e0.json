{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/rachael-andrew/Bootcamp/Project-3:AuthAPI/project-3/client/screens/auth/Login.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport * as api from \"../../services/auth\";\nimport { useAuth } from \"../../providers/auth\";\nimport Form from 'react-native-basic-form';\nimport CTA from \"../../components/Shared\";\nexport default function Login(props) {\n  var navigation = props.navigation;\n  var navigate = navigation.navigate;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useAuth = useAuth(),\n      handleLogin = _useAuth.handleLogin;\n\n  var fields = [{\n    name: 'email',\n    label: \"Email Address\",\n    required: true\n  }, {\n    name: 'password',\n    label: 'Password',\n    required: true,\n    secure: true\n  }];\n\n  function onSubmit(state) {\n    var response, username;\n    return _regeneratorRuntime.async(function onSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(api.login(state));\n\n          case 4:\n            response = _context.sent;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(handleLogin(response));\n\n          case 7:\n            setLoading(false);\n            username = response.user.username !== null;\n            if (username) navigate('App');else navigation.replace('Username');\n            _context.next = 16;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](1);\n            setError(_context.t0.message);\n            setLoading(false);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 12]], Promise);\n  }\n\n  var formProps = {\n    title: \"Login\",\n    fields: fields,\n    onSubmit: onSubmit,\n    loading: loading\n  };\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      paddingHorizontal: 16,\n      backgroundColor: \"#fff\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(Header, {\n    title: \"Login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, React.createElement(ErrorText, {\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), React.createElement(Form, _extends({}, formProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), React.createElement(CTA, {\n    ctaText: \"Forgot Password?\",\n    onPress: function onPress() {\n      return navigation.navigate(\"ForgotPassword\");\n    },\n    style: {\n      marginTop: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }), React.createElement(CTA, {\n    title: \"Don't have an account?\",\n    ctaText: \"Register\",\n    onPress: function onPress() {\n      return navigation.replace(\"Register\");\n    },\n    style: {\n      marginTop: 50\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }))));\n}\n;\n\nLogin.navigationOptions = function (_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  return {\n    title: \"\"\n  };\n};","map":{"version":3,"sources":["/Users/rachael-andrew/Bootcamp/Project-3:AuthAPI/project-3/client/screens/auth/Login.js"],"names":["React","useState","api","useAuth","Form","CTA","Login","props","navigation","navigate","error","setError","loading","setLoading","handleLogin","fields","name","label","required","secure","onSubmit","state","login","response","username","user","replace","message","formProps","title","flex","paddingHorizontal","backgroundColor","marginTop","navigationOptions"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {View} from 'react-native';\n\nimport * as api from \"../../services/auth\";\nimport { useAuth } from \"../../providers/auth\";\n\nimport Form from 'react-native-basic-form';\nimport CTA from \"../../components/Shared\";\n\nexport default function Login(props) {\n    const {navigation} = props;\n    const {navigate} = navigation;\n\n    // DECLARE VARIABLES \n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const { handleLogin } = useAuth();\n\n    const fields = [\n        {name: 'email', label: \"Email Address\", required: true},\n        {name: 'password', label: 'Password', required: true, secure: true}\n\n    ];\n\n    async function onSubmit(state) {\n        setLoading(true);\n\n        try {\n            let response = await api.login(state);\n            await handleLogin(response);\n\n            setLoading(false);\n\n            // check if username is null\n            let username = (response.user.username !== null);\n            if (username) navigate('App');\n            else navigation.replace('Username');\n\n        } catch (error) {\n            setError(error.message);\n            setLoading(false)\n        }\n    }\n\n    let formProps = {title: \"Login\", fields, onSubmit, loading};\n    return (\n        <View style={{flex:1, paddingHorizontal: 16, backgroundColor:\"#fff\"}}>\n            <Header title={\"Login\"}/>\n            <View style={{flex:1}}>\n                <ErrorText error={error}/>\n                <Form {...formProps}>\n                    <CTA\n                        ctaText={\"Forgot Password?\"}\n                        onPress={() => navigation.navigate(\"ForgotPassword\")}\n                        style={{marginTop:20}}/>\n\n                    <CTA\n                        title={\"Don't have an account?\"}\n                        ctaText={\"Register\"}\n                        onPress={() => navigation.replace(\"Register\")}\n                        style={{marginTop: 50}}/>\n                </Form>\n            </View>\n        </View>\n    );\n};\n\nLogin.navigationOptions = ({}) => {\n    return {\n        title: ``\n    }\n};"]},"metadata":{},"sourceType":"module"}