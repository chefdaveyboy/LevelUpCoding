{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/rachael-andrew/Bootcamp/Project-3:AuthAPI/project-3/Project-3/client/app/scenes/auth/Register.js\";\nimport React, { useState } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as api from \"../../services/auth\";\nimport Form from 'react-native-basic-form';\nimport CTA from \"../../components/CTA\";\nimport { Header, ErrorText } from \"../../components/Shared\";\nexport default function Register(props) {\n  var navigation = props.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var fields = [{\n    name: 'username',\n    label: 'Username',\n    required: true\n  }, {\n    name: 'firstName',\n    label: 'First Name',\n    required: true\n  }, {\n    name: 'lastName',\n    label: 'Last Name',\n    required: true\n  }, {\n    name: 'email',\n    label: 'Email Address',\n    required: true\n  }, {\n    name: 'password',\n    label: 'Password',\n    required: true,\n    secure: true\n  }];\n\n  function onSubmit(state) {\n    var response;\n    return _regeneratorRuntime.async(function onSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(api.register(state));\n\n          case 4:\n            response = _context.sent;\n            setLoading(false);\n            Alert.alert('Registration Successful', response.message, [{\n              text: 'OK',\n              onPress: function onPress() {\n                return navigation.replace(\"Login\");\n              }\n            }], {\n              cancelable: false\n            });\n            _context.next = 13;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](1);\n            setError(_context.t0.message);\n            setLoading(false);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 9]], Promise);\n  }\n\n  var formProps = {\n    title: \"Register\",\n    fields: fields,\n    onSubmit: onSubmit,\n    loading: loading\n  };\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      paddingHorizontal: 16,\n      backgroundColor: \"#fff\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, React.createElement(Header, {\n    title: \"Register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, React.createElement(ErrorText, {\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }), React.createElement(Form, _extends({}, formProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }), React.createElement(CTA, {\n    title: \"Already have an account?\",\n    ctaText: \"Login\",\n    onPress: function onPress() {\n      return navigation.replace(\"Login\");\n    },\n    style: {\n      marginTop: 50\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }))));\n}\n;\n\nRegister.navigationOptions = function (_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  return {\n    title: \"\"\n  };\n};","map":{"version":3,"sources":["/Users/rachael-andrew/Bootcamp/Project-3:AuthAPI/project-3/Project-3/client/app/scenes/auth/Register.js"],"names":["React","useState","api","Form","CTA","Header","ErrorText","Register","props","navigation","error","setError","loading","setLoading","fields","name","label","required","secure","onSubmit","state","register","response","Alert","alert","message","text","onPress","replace","cancelable","formProps","title","flex","paddingHorizontal","backgroundColor","marginTop","navigationOptions"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {Alert, View} from 'react-native';\n\nimport * as api from \"../../services/auth\";\n\nimport Form from 'react-native-basic-form';\nimport CTA from \"../../components/CTA\";\nimport {Header, ErrorText} from \"../../components/Shared\";\n\nexport default function Register(props) {\n    const {navigation} = props;\n\n    //1 - DECLARE VARIABLES\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    const fields = [\n        {name: 'username', label: 'Username', required: true},\n        {name: 'firstName', label: 'First Name', required: true},\n        {name: 'lastName', label: 'Last Name', required: true},\n        {name: 'email', label: 'Email Address', required: true},\n        {name: 'password', label: 'Password', required: true, secure:true}\n    ];\n\n    async function onSubmit(state) {\n        setLoading(true);\n\n        try {\n            let response = await api.register(state);\n            setLoading(false);\n            Alert.alert(\n                'Registration Successful',\n                response.message,\n                [{text: 'OK', onPress: () => navigation.replace(\"Login\")}],\n                {cancelable: false},\n            );\n        } catch (error) {\n            setError(error.message);\n            setLoading(false)\n        }\n    }\n\n    let formProps = {title: \"Register\", fields, onSubmit, loading };\n    return (\n        <View style={{flex: 1, paddingHorizontal: 16, backgroundColor:\"#fff\"}}>\n            <Header title={\"Register\"}/>\n            <View style={{flex:1}}>\n                <ErrorText error={error}/>\n                <Form {...formProps}>\n                    <CTA\n                        title={\"Already have an account?\"}\n                        ctaText={\"Login\"}\n                        onPress={() => navigation.replace(\"Login\")}\n                        style={{marginTop: 50}}/>\n                </Form>\n            </View>\n        </View>\n    );\n};\n\nRegister.navigationOptions = ({}) => {\n    return {\n        title: ``\n    }\n};"]},"metadata":{},"sourceType":"module"}