{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/rachael-andrew/Bootcamp/Project-3:AuthAPI/project-3/node_modules/react-native-basic-form/helpers/TextInput.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Input, Icon } from 'react-native-elements';\n\nvar TextInput = function TextInput(props) {\n  var label = props.label,\n      value = props.value,\n      errorMessage = props.errorMessage,\n      placeholder = props.placeholder,\n      secure = props.secure,\n      onChangeText = props.onChangeText,\n      keyboardType = props.keyboardType,\n      testID = props.testID,\n      multiline = props.multiline;\n\n  var _useState = useState(secure),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      setVisibility = _useState2[1];\n\n  var iconSize = props.iconSize,\n      iconColor = props.iconColor;\n\n  var toggleVisibility = function toggleVisibility() {\n    return setVisibility(!visible);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, React.createElement(Input, {\n    label: label,\n    value: value,\n    placeholder: placeholder,\n    errorMessage: errorMessage,\n    secureTextEntry: visible,\n    containerStyle: styles.containerStyle,\n    labelStyle: styles.labelStyle,\n    onChangeText: onChangeText,\n    keyboardType: keyboardType,\n    testID: testID,\n    multiline: multiline,\n    errorProps: {\n      testID: testID + \"InputError\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }), secure && React.createElement(Icon, {\n    containerStyle: styles.icon,\n    name: visible ? \"visibility\" : \"visibility-off\",\n    size: iconSize,\n    color: iconColor,\n    onPress: toggleVisibility,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }));\n};\n\nTextInput.defaultProps = {\n  testID: \"\",\n  label: \"\",\n  value: \"\",\n  errorMessage: \"\",\n  placeholder: null,\n  password: false,\n  multiline: false,\n  onChangeText: null,\n  keyboardType: 'default',\n  iconSize: 23,\n  iconColor: \"#222222\"\n};\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#fff\",\n    marginTop: 14\n  },\n  containerStyle: {\n    paddingHorizontal: 0\n  },\n  labelStyle: {\n    fontWeight: \"400\"\n  },\n  icon: {\n    position: 'absolute',\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    top: 25,\n    right: 0\n  }\n});\nexport default TextInput;","map":{"version":3,"sources":["/Users/rachael-andrew/Bootcamp/Project-3:AuthAPI/project-3/node_modules/react-native-basic-form/helpers/TextInput.js"],"names":["React","useState","Input","Icon","TextInput","props","label","value","errorMessage","placeholder","secure","onChangeText","keyboardType","testID","multiline","visible","setVisibility","iconSize","iconColor","toggleVisibility","styles","container","containerStyle","labelStyle","icon","defaultProps","password","StyleSheet","create","backgroundColor","marginTop","paddingHorizontal","fontWeight","position","paddingVertical","top","right"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAGA,SAAQC,KAAR,EAAeC,IAAf,QAA0B,uBAA1B;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAAA,MACpBC,KADoB,GAC8ED,KAD9E,CACpBC,KADoB;AAAA,MACbC,KADa,GAC8EF,KAD9E,CACbE,KADa;AAAA,MACNC,YADM,GAC8EH,KAD9E,CACNG,YADM;AAAA,MACQC,WADR,GAC8EJ,KAD9E,CACQI,WADR;AAAA,MACqBC,MADrB,GAC8EL,KAD9E,CACqBK,MADrB;AAAA,MAC6BC,YAD7B,GAC8EN,KAD9E,CAC6BM,YAD7B;AAAA,MAC2CC,YAD3C,GAC8EP,KAD9E,CAC2CO,YAD3C;AAAA,MACyDC,MADzD,GAC8ER,KAD9E,CACyDQ,MADzD;AAAA,MACiEC,SADjE,GAC8ET,KAD9E,CACiES,SADjE;;AAAA,kBAGQb,QAAQ,CAACS,MAAD,CAHhB;AAAA;AAAA,MAGlBK,OAHkB;AAAA,MAGTC,aAHS;;AAAA,MAKjBC,QALiB,GAKMZ,KALN,CAKjBY,QALiB;AAAA,MAKPC,SALO,GAKMb,KALN,CAKPa,SALO;;AAOzB,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,WAAMH,aAAa,CAAC,CAACD,OAAF,CAAnB;AAAA,GAAzB;;AAEA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEK,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACI,IAAA,KAAK,EAAEf,KADX;AAEI,IAAA,KAAK,EAAEC,KAFX;AAGI,IAAA,WAAW,EAAEE,WAHjB;AAII,IAAA,YAAY,EAAED,YAJlB;AAKI,IAAA,eAAe,EAAEO,OALrB;AAMI,IAAA,cAAc,EAAEK,MAAM,CAACE,cAN3B;AAOI,IAAA,UAAU,EAAEF,MAAM,CAACG,UAPvB;AAQI,IAAA,YAAY,EAAEZ,YARlB;AASI,IAAA,YAAY,EAAEC,YATlB;AAUI,IAAA,MAAM,EAAEC,MAVZ;AAWI,IAAA,SAAS,EAAEC,SAXf;AAYI,IAAA,UAAU,EAAE;AAACD,MAAAA,MAAM,EAAIA,MAAJ;AAAP,KAZhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAgBQH,MAAM,IACN,oBAAC,IAAD;AAAM,IAAA,cAAc,EAAEU,MAAM,CAACI,IAA7B;AACM,IAAA,IAAI,EAAET,OAAO,GAAG,YAAH,GAAkB,gBADrC;AAEM,IAAA,IAAI,EAAEE,QAFZ;AAGM,IAAA,KAAK,EAAEC,SAHb;AAIM,IAAA,OAAO,EAAEC,gBAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBR,CADJ;AA2BH,CApCD;;AAsCAf,SAAS,CAACqB,YAAV,GAAyB;AACrBZ,EAAAA,MAAM,EAAC,EADc;AAErBP,EAAAA,KAAK,EAAE,EAFc;AAGrBC,EAAAA,KAAK,EAAE,EAHc;AAIrBC,EAAAA,YAAY,EAAE,EAJO;AAKrBC,EAAAA,WAAW,EAAE,IALQ;AAMrBiB,EAAAA,QAAQ,EAAE,KANW;AAOrBZ,EAAAA,SAAS,EAAE,KAPU;AAQrBH,EAAAA,YAAY,EAAE,IARO;AASrBC,EAAAA,YAAY,EAAE,SATO;AAarBK,EAAAA,QAAQ,EAAE,EAbW;AAcrBC,EAAAA,SAAS,EAAE;AAdU,CAAzB;AAiBA,IAAME,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC7BP,EAAAA,SAAS,EAAE;AACPQ,IAAAA,eAAe,EAAE,MADV;AAEPC,IAAAA,SAAS,EAAE;AAFJ,GADkB;AAM7BR,EAAAA,cAAc,EAAE;AACZS,IAAAA,iBAAiB,EAAE;AADP,GANa;AAU7BR,EAAAA,UAAU,EAAC;AACPS,IAAAA,UAAU,EAAE;AADL,GAVkB;AAc7BR,EAAAA,IAAI,EAAE;AACFS,IAAAA,QAAQ,EAAE,UADR;AAEFF,IAAAA,iBAAiB,EAAE,CAFjB;AAGFG,IAAAA,eAAe,EAAE,CAHf;AAIFC,IAAAA,GAAG,EAAE,EAJH;AAKFC,IAAAA,KAAK,EAAE;AALL;AAduB,CAAlB,CAAf;AAuBA,eAAehC,SAAf","sourcesContent":["import React, {useState} from 'react';\nimport {View, StyleSheet} from 'react-native';\n\nimport {Input, Icon} from 'react-native-elements';\n\nconst TextInput = (props) => {\n    let {label, value, errorMessage, placeholder, secure, onChangeText, keyboardType, testID, multiline} = props;\n\n    const [visible, setVisibility] = useState(secure);\n\n    const { iconSize, iconColor} = props;\n\n    const toggleVisibility = () => setVisibility(!visible);\n\n    return (\n        <View style={styles.container}>\n            <Input\n                label={label}\n                value={value}\n                placeholder={placeholder}\n                errorMessage={errorMessage}\n                secureTextEntry={visible}\n                containerStyle={styles.containerStyle}\n                labelStyle={styles.labelStyle}\n                onChangeText={onChangeText}\n                keyboardType={keyboardType}\n                testID={testID}\n                multiline={multiline}\n                errorProps={{testID:`${testID}InputError`}}\n            />\n            {\n                secure &&\n                <Icon containerStyle={styles.icon}\n                      name={visible ? \"visibility\" : \"visibility-off\"}\n                      size={iconSize}\n                      color={iconColor}\n                      onPress={toggleVisibility}\n                />\n            }\n        </View>\n    )\n};\n\nTextInput.defaultProps = {\n    testID:\"\",\n    label: \"\",\n    value: \"\",\n    errorMessage: \"\",\n    placeholder: null,\n    password: false,\n    multiline: false,\n    onChangeText: null,\n    keyboardType: 'default',\n\n\n\n    iconSize: 23,\n    iconColor: \"#222222\",\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: \"#fff\",\n        marginTop: 14\n    },\n\n    containerStyle: {\n        paddingHorizontal: 0,\n    },\n\n    labelStyle:{\n        fontWeight: \"400\"\n    },\n\n    icon: {\n        position: 'absolute',\n        paddingHorizontal: 8,\n        paddingVertical: 4,\n        top: 25,\n        right: 0\n    }\n});\n\nexport default TextInput;"]},"metadata":{},"sourceType":"module"}