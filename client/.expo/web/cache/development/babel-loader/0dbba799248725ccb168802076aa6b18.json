{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/rachael-andrew/Bootcamp/Project-3:AuthAPI/project-3/client/screens/auth/AuthLoading.js\";\nimport React, { useEffect } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { StackActions } from 'react-navigation';\nimport { useAuth } from \"../../providers/auth\";\nexport default function AuthLoading(props) {\n  var navigate = props.navigation.navigate;\n\n  var _useAuth = useAuth(),\n      getAuthState = _useAuth.getAuthState;\n\n  useEffect(function () {\n    initialize();\n  }, []);\n\n  function initialize() {\n    var _await$getAuthState, user, username;\n\n    return _regeneratorRuntime.async(function initialize$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(getAuthState());\n\n          case 3:\n            _await$getAuthState = _context.sent;\n            user = _await$getAuthState.user;\n\n            if (user) {\n              username = !!user.username;\n              if (username) navigate('App');else navigate('Auth', {}, StackActions.replace({\n                routeName: \"Username\"\n              }));\n            } else navigate('Auth');\n\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            navigate('Auth');\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  }\n\n  return React.createElement(View, {\n    style: {\n      backgroundColor: \"#fff\",\n      alignItems: 'center',\n      justifyContent: 'center',\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, React.createElement(ActivityIndicator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Loading User Data\"));\n}\n;","map":{"version":3,"sources":["/Users/rachael-andrew/Bootcamp/Project-3:AuthAPI/project-3/client/screens/auth/AuthLoading.js"],"names":["React","useEffect","StackActions","useAuth","AuthLoading","props","navigate","navigation","getAuthState","initialize","user","username","replace","routeName","backgroundColor","alignItems","justifyContent","flex"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;AAEA,SAASC,YAAT,QAA6B,kBAA7B;AAEA,SAASC,OAAT;AAGA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA,MAChCC,QADgC,GACpBD,KAAK,CAACE,UADc,CAChCD,QADgC;;AAAA,iBAEdH,OAAO,EAFO;AAAA,MAE/BK,YAF+B,YAE/BA,YAF+B;;AAIvCP,EAAAA,SAAS,CAAC,YAAM;AACZQ,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAAeA,UAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAE6BD,YAAY,EAFzC;;AAAA;AAAA;AAEeE,YAAAA,IAFf,uBAEeA,IAFf;;AAIQ,gBAAIA,IAAJ,EAAU;AAEFC,cAAAA,QAFE,GAES,CAAC,CAAED,IAAI,CAACC,QAFjB;AAIN,kBAAIA,QAAJ,EAAcL,QAAQ,CAAC,KAAD,CAAR,CAAd,KACKA,QAAQ,CAAC,MAAD,EAAS,EAAT,EAAaJ,YAAY,CAACU,OAAb,CAAqB;AAACC,gBAAAA,SAAS,EAAE;AAAZ,eAArB,CAAb,CAAR;AAGR,aARD,MAQOP,QAAQ,CAAE,MAAF,CAAR;;AAZf;AAAA;;AAAA;AAAA;AAAA;AAcQA,YAAAA,QAAQ,CAAC,MAAD,CAAR;;AAdR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkBA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACQ,MAAAA,eAAe,EAAE,MAAlB;AAA0BC,MAAAA,UAAU,EAAE,QAAtC;AAAgDC,MAAAA,cAAc,EAAE,QAAhE;AAA0EC,MAAAA,IAAI,EAAE;AAAhF,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO,mBAAP,CAFJ,CADJ;AAMH;AAAA","sourcesContent":["import React, {useEffect} from 'react';\nimport {ActivityIndicator, View, Text} from 'react-native';\nimport { StackActions } from 'react-navigation';\n\nimport { useAuth } from \"../../providers/auth\";\n\n\nexport default function AuthLoading(props) {\n    const {navigate} = props.navigation;\n    const { getAuthState } = useAuth();\n\n    useEffect(() => {\n        initialize()\n    }, []);\n\n    async function initialize() {\n        try {\n            const {user} = await getAuthState();\n\n            if (user) {\n                // check if username exists\n                let username = !!(user.username);\n\n                if (username) navigate('App');\n                else navigate('Auth', {}, StackActions.replace({routeName: \"Username\"}))\n\n            \n            } else navigate ('Auth');\n        } catch (e) {\n            navigate('Auth');\n        }\n    }\n\n    return (\n        <View style={{backgroundColor: \"#fff\", alignItems: 'center', justifyContent: 'center', flex: 1}}>\n            <ActivityIndicator/>\n            <Text>{\"Loading User Data\"}</Text>\n        </View>\n    );\n};"]},"metadata":{},"sourceType":"module"}